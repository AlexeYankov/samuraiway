{"version":3,"file":"static/js/226.ec69e60b.chunk.js","mappings":"iNACA,EAA+B,kCAA/B,EAAmF,qCAAnF,EAAsI,iCAAtI,EAA0L,sCAA1L,EAAwO,2BAAxO,EAAgR,gC,uCCkFhR,EAlEoB,SAAH,GAIf,IAJ6F,IAAxEA,EAAW,EAAXA,YAAaC,EAAI,EAAJA,KAAMC,EAAmB,EAAnBA,oBAClCC,GAAWC,EAAAA,EAAAA,MACXC,GAAwBC,KAAKC,KAAKN,EAAO,IAC3CO,EAAY,GACPC,EAAI,EAAGA,EAAIJ,EAAsBI,IACxCD,EAAUE,KAAKD,EAAI,GAGrB,OAA8BE,EAAAA,EAAAA,UAAiBT,GAAoB,eAA5DU,EAAO,KAAEC,EAAU,MAC1BC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAASH,GAASI,MAAK,SAACC,GACtB,IAAIC,EAAgBD,EAAIE,KAAKC,MAC7BjB,GAASkB,EAAAA,EAAAA,IAAsBH,GACjC,GACF,GAAG,CAACN,IACJ,IAAMU,EAAcd,EAAUe,KAAI,SAACC,GACjC,IAAMC,EAAmBvB,EAAsBsB,EAAK,IAAMZ,EAAU,CAAEc,gBAAiB,4BAA+B,CAAC,EACvH,OACE,SAAC,KAAO,CAACC,MAAOF,EAAkBG,UAAWC,EAAkBC,GAAI,eAAgBC,QAAS,kBAAMlB,EAAWX,EAAsBsB,EAAK,EAAE,EAAC,SACxIA,GADwDA,EAI/D,IACMQ,EAAchC,EAAYuB,KAAI,SAACC,GACnC,IAAMS,EAAeT,EAAGU,SAAW,WAAa,SAWhD,OACE,iBAAKN,UAAWC,EAAc,WAC5B,iBAAKD,UAAWC,EAAe,WAC7B,gBAAKM,IAAKX,EAAGY,OAAOC,MAAQb,EAAGY,OAAOC,MAAQC,EAAKC,IAAI,eACvD,0BAAOf,EAAGgB,WAGZ,iBAAKZ,UAAWC,EAAkB,WAChC,uCAAeL,EAAGiB,OAClB,gBAAKb,UAAWC,EAAmB,UACjC,mBACEE,QAAS,kBArBDU,EAqBgBjB,EAAGiB,GArBPC,EAqBWlB,EAAGU,SApB1C/B,GAASwC,EAAAA,EAAAA,IAAgBF,GAAI,SAC7BC,GACIE,EAAAA,EAAAA,IAAYH,GACTzB,MAAK,kBAAMb,GAAS0C,EAAAA,EAAAA,IAAiBJ,EAAIC,GAAM,IAC/C1B,MAAK,kBAAMb,GAASwC,EAAAA,EAAAA,IAAgBF,GAAI,GAAO,KAClDK,EAAAA,EAAAA,IAAUL,GACPzB,MAAK,kBAAMb,GAAS0C,EAAAA,EAAAA,IAAiBJ,EAAIC,GAAM,IAC/C1B,MAAK,kBAAMb,GAASwC,EAAAA,EAAAA,IAAgBF,GAAI,GAAO,KARvC,IAACA,EAAYC,CAqBuB,EAC3Cf,MAAOH,EAAGuB,SAAW,CAAEC,cAAe,OAAQC,MAAO,QAAW,CAAC,EACjEC,SAAU1B,EAAGuB,SAAS,SAErBd,WAd2BT,EAAGiB,GAoB3C,IAEA,OACE,qBAASb,UAAWuB,EAAAA,EAAAA,kBAAoB,WACtC,yBAAMnB,KACN,gBAAKJ,UAAWC,EAAa,SAAEP,MAGrC,C","sources":["webpack://samurai-way/./src/components/Profile/Subscribers/Subscribers.module.css?0807","components/Profile/Subscribers/Subscribers.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"avaContainer\":\"Subscribers_avaContainer__4tRwD\",\"buttonContainer\":\"Subscribers_buttonContainer__3WeiF\",\"userProfile\":\"Subscribers_userProfile__om2VQ\",\"userFollowButton\":\"Subscribers_userFollowButton__S2+OB\",\"pages\":\"Subscribers_pages__ZPdD+\",\"pagination\":\"Subscribers_pagination__uyorH\"};","import { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport img from \"../../../pics/Other/profile.png\";\nimport r from \"../../../App.module.css\";\nimport l from \"./Subscribers.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { setFetchReducer, setFollowReducer, setSubscribersReducer } from \"../../../state/profileState/SubscribersState\";\nimport { getUsers, setFollow, setUnFollow } from \"../../../dataAccessLayer/ApiSN\";\nimport { SubscribersType } from \"../../../types/types\";\n\ntype SubscribersComponentType = {\n  subscribers: SubscribersType[];\n  subs: number;\n  randomPageUseEffect: number;\n  isAppStatus: boolean;\n};\n\nconst Subscribers = ({ subscribers, subs, randomPageUseEffect }: SubscribersComponentType) => {\n  const dispatch = useDispatch();\n  const subscribersPageCount = +Math.ceil(subs / 10);\n  let usersData = [];\n  for (let i = 0; i < subscribersPageCount; i++) {\n    usersData.push(i + 1);\n  }\n\n  const [getPage, setGetPage] = useState<number>(randomPageUseEffect);\n  useEffect(() => {\n    getUsers(getPage).then((res) => {\n      let dataForRender = res.data.items;\n      dispatch(setSubscribersReducer(dataForRender));\n    });\n  }, [getPage]);\n  const mappedPages = usersData.map((el) => {\n    const currentPageStyle = randomPageUseEffect + el - 1 === getPage ? { backgroundColor: \"rgba(152, 215, 233, 0.6)\" } : {};\n    return (\n      <NavLink style={currentPageStyle} className={l.pages} key={el} to={\"/subscribers\"} onClick={() => setGetPage(randomPageUseEffect + el - 1)}>\n        {el}\n      </NavLink>\n    );\n  });\n  const mappedUsers = subscribers.map((el) => {\n    const followedText = el.followed ? \"Unfollow\" : \"Follow\";\n    const FollowFn = (id: number, bool: boolean) => {\n      dispatch(setFetchReducer(id, true));\n      bool\n        ? setUnFollow(id)\n            .then(() => dispatch(setFollowReducer(id, bool)))\n            .then(() => dispatch(setFetchReducer(id, false)))\n        : setFollow(id)\n            .then(() => dispatch(setFollowReducer(id, bool)))\n            .then(() => dispatch(setFetchReducer(id, false)));\n    };\n    return (\n      <div className={l.userProfile} key={el.id}>\n        <div className={l.avaContainer}>\n          <img src={el.photos.large ? el.photos.large : img} alt=\"userPhoto\" />\n          <span>{el.name}</span>\n        </div>\n\n        <div className={l.buttonContainer}>\n          <span>UserID: {el.id}</span>\n          <div className={l.userFollowButton}>\n            <button\n              onClick={() => FollowFn(el.id, el.followed)}\n              style={el.fetching ? { pointerEvents: \"none\", color: \"gray\" } : {}}\n              disabled={el.fetching}\n            >\n              {followedText}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <section className={r.profileAppWrapper}>\n      <div>{mappedUsers}</div>\n      <div className={l.pagination}>{mappedPages}</div>\n    </section>\n  );\n};\n\nexport default Subscribers;\n"],"names":["subscribers","subs","randomPageUseEffect","dispatch","useDispatch","subscribersPageCount","Math","ceil","usersData","i","push","useState","getPage","setGetPage","useEffect","getUsers","then","res","dataForRender","data","items","setSubscribersReducer","mappedPages","map","el","currentPageStyle","backgroundColor","style","className","l","to","onClick","mappedUsers","followedText","followed","src","photos","large","img","alt","name","id","bool","setFetchReducer","setUnFollow","setFollowReducer","setFollow","fetching","pointerEvents","color","disabled","r"],"sourceRoot":""}